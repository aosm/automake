#! /bin/sh

# Test of yacc functionality, derived from GNU binutils
# by Tim Van Holder.

. $srcdir/defs || exit 1

cat > configure.in << 'END'
AC_INIT
AM_INIT_AUTOMAKE(nonesuch, nonesuch)
AC_PROG_CC
AM_PROG_CC_C_O
AC_PROG_YACC
AC_OUTPUT(Makefile)
END

cat > Makefile.am << 'END'
bin_PROGRAMS = maude
maude_SOURCES = sub/maude.y
END

mkdir sub

: > sub/maude.y

$ACLOCAL || exit 1
$AUTOMAKE -a || exit 1

grep '^maude\.c:' Makefile.in || exit 1


## Try again with subdir-objects.

cat > Makefile.am << 'END'
AUTOMAKE_OPTIONS = subdir-objects
bin_PROGRAMS = maude
maude_SOURCES = sub/maude.y
END

$ACLOCAL || exit 1
$AUTOMAKE -a || exit 1

grep '^sub/maude\.c:' Makefile.in || exit 1


## Try again with per-exe flags.

cat > Makefile.am << 'END'
bin_PROGRAMS = maude
maude_SOURCES = sub/maude.y
## A particularly trickey case.
maude_YFLAGS = -d
END

$ACLOCAL || exit 1
$AUTOMAKE -a || exit 1

# Rule should use maude_YFLAGS.
grep 'AM_YFLAGS.*maude' Makefile.in && exit 1

# Silly regression.
grep 'maudec' Makefile.in && exit 1

# Make sure the .o file is required.
grep '^am_maude_OBJECTS.*maude' Makefile.in || exit 1

exit 0
